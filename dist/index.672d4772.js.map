{"mappings":"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","sources":["script.js"],"sourcesContent":["const codeGuesses = Array.from(\r\n  document.querySelectorAll(\".guess-and-color-selection\")\r\n);\r\nconst colors = [\r\n  \"blue\",\r\n  \"grey\",\r\n  \"yellow\",\r\n  \"red\",\r\n  \"orange\",\r\n  \"green\",\r\n  \"white\",\r\n  \"pink\",\r\n];\r\nconst containerColors = document.querySelector(\".container-colors\");\r\nlet pastGuesses = [];\r\nconst errorContainer = document.getElementById(\"error-container\");\r\nconst successContainer = document.getElementById(\"success-container\");\r\nconst hintElementContainer = document.querySelector(\".hint-information\");\r\nconst sidebarRules = document.querySelector(\".rules\");\r\nconst submitBtn = document.querySelector(\".submit-button\");\r\nconst toggleSidebarBtn = document.querySelector(\".toggle-sidebar\");\r\n\r\nconst resetBtn = document.querySelector(\".reset\");\r\nconst pastGuessesContainer = document.querySelector(\".past-guesses\");\r\nlet guessesLeft = 10;\r\nlet playerWon = false;\r\nclass Guess {\r\n  guess;\r\n  allColors;\r\n  #parentElement = document.querySelector(\".past-guesses\");\r\n  #hintElementContainer = document.querySelector(\".hint-information\");\r\n  #rightColorRightSpot;\r\n  #rightColorWrongSpot;\r\n  #wrongColor;\r\n  constructor(guess, rightColorRightSpot, rightColorWrongSpot, wrongColor) {\r\n    this.guess = [...guess];\r\n    this.#rightColorRightSpot = rightColorRightSpot;\r\n    this.#rightColorWrongSpot = rightColorWrongSpot;\r\n    this.#wrongColor = wrongColor;\r\n    this.allColors = this.guess.join(\",\");\r\n  }\r\n  renderGuess() {\r\n    //EDIT AFTERWARDS TO ADD ICONS\r\n    const htmlGuessLog = `<div data-id = \"${\r\n      pastGuesses.indexOf(this) + 1\r\n    }\"class=\"past-guess past-guess-${\r\n      (pastGuesses.indexOf(this) + 1) % 2 === 0 ? \"even\" : \"odd\"\r\n    }\">\r\n        <div data-id = \"${\r\n          pastGuesses.indexOf(this) + 1\r\n        }\"class=\"spot-icon right-color-right-spot-icon\">${\r\n      this.#rightColorRightSpot\r\n    }</div>\r\n        <div data-id = \"${pastGuesses.indexOf(this) + 1}\"class=\"black-box-code\">\r\n            <div data-id = \"${\r\n              pastGuesses.indexOf(this) + 1\r\n            }\"class=\"past-guess-colors\">\r\n                <div class=\"past-guess-color color-${\r\n                  this.guess[0]\r\n                }\" data-id = \"${pastGuesses.indexOf(this) + 1}\"data-color = \"${\r\n      this.guess[0]\r\n    }\"></div>\r\n                <div class=\"past-guess-color color-${\r\n                  this.guess[1]\r\n                }\" data-id = \"${pastGuesses.indexOf(this) + 1}\"data-color = \"${\r\n      this.guess[1]\r\n    }\"></div>\r\n                <div class=\"past-guess-color color-${\r\n                  this.guess[2]\r\n                }\" data-id = \"${pastGuesses.indexOf(this) + 1}\"data-color = \"${\r\n      this.guess[2]\r\n    }\"></div>\r\n                <div class=\"past-guess-color color-${\r\n                  this.guess[3]\r\n                }\" data-id = \"${pastGuesses.indexOf(this) + 1}\"data-color = \"${\r\n      this.guess[3]\r\n    }\"></div>\r\n            </div>\r\n        </div>\r\n        <div data-id = \"${\r\n          pastGuesses.indexOf(this) + 1\r\n        }\"class=\"spot-icon right-color-wrong-spot-icon\">${\r\n      this.#rightColorWrongSpot\r\n    }</div>\r\n\r\n\r\n</div>`;\r\n    const htmlHintBox = `<li class=\"clue right-color-right-spot\">\r\n<div\r\n  class=\"hint-icon spot-icon right-color-right-spot-icon\"\r\n></div>\r\n<p class=\"guess-infomation\">\r\n  ${this.#rightColorRightSpot} color${\r\n      this.#rightColorRightSpot > 1 || this.#rightColorRightSpot === 0\r\n        ? \"s are\"\r\n        : \" is\"\r\n    } in the code, and in the right spot\r\n</p>\r\n</li>\r\n<li class=\"clue right-color-wrong-spot\">\r\n<div\r\n  class=\"hint-icon spot-icon right-color-wrong-spot-icon\"\r\n></div>\r\n<p class=\"guess-infomation\">\r\n  ${this.#rightColorWrongSpot} color${\r\n      this.#rightColorWrongSpot > 1 || this.rightColorWrongSpot === 0\r\n        ? \"s are\"\r\n        : \" is\"\r\n    } in the code, but in the wrong spot\r\n</p>\r\n</li>\r\n<li class=\"clue wrong-color\">\r\n<div class=\"hint-icon spot-icon wrong-color-icon\"></div>\r\n<p class=\"guess-infomation\">\r\n  ${this.#wrongColor} color${\r\n      this.#wrongColor > 1 || this.#wrongColor === 0 ? \"s are\" : \" is\"\r\n    } not in the code at all\r\n</p>\r\n</li>\r\n\r\n</ul>`;\r\n    this.#parentElement.insertAdjacentHTML(\"afterbegin\", htmlGuessLog);\r\n    this.#hintElementContainer.classList.remove(\"deleted\");\r\n    this.#hintElementContainer.innerHTML = \"\";\r\n    this.#hintElementContainer.insertAdjacentHTML(\"afterbegin\", htmlHintBox);\r\n  }\r\n}\r\nconst initializeCode = function () {\r\n  const uniqueCode = new Set();\r\n  while (uniqueCode.size < 4) {\r\n    uniqueCode.add(colors[Math.floor(Math.random() * colors.length)]);\r\n  }\r\n  return [...uniqueCode];\r\n};\r\nconst gameInit = function () {\r\n  codeGuesses.forEach(function (el, i) {\r\n    el.insertAdjacentHTML(\r\n      \"afterbegin\",\r\n      `<div class=\"color-selector hidden\" data-guess-num=\"${i + 1}\">\r\n    <button data-color=\"red\"title=\"color\" class=\"color color-red\"></button>\r\n    <button data-color=\"blue\" title=\"color\" class=\"color color-blue\"></button>\r\n    <button data-color=\"green\"title=\"color\" class=\"color color-green\"></button>\r\n    <button data-color=\"yellow\" title=\"color\" class=\"color color-yellow\"></button>\r\n    <button data-color=\"orange\"title=\"color\" class=\"color color-orange\"></button>\r\n    <button data-color=\"pink\"title=\"color\" class=\"color color-pink\"></button>\r\n    <button data-color=\"grey\"title=\"color\" class=\"color color-grey\"></button>\r\n    <button data-color=\"white\"title=\"color\" class=\"color color-white\"></button>\r\n\r\n    </button>\r\n</div>`\r\n    );\r\n  });\r\n};\r\nconst code = initializeCode();\r\ngameInit();\r\n\r\nconst guessInit = function () {\r\n  const guess = new Array(4);\r\n  guess.fill(\"_\");\r\n  codeGuesses.forEach(function (codeGuess) {\r\n    codeGuess\r\n      .querySelector(\".color-guess\")\r\n      .addEventListener(\"mouseenter\", function (e) {\r\n        const colorSelector = codeGuess.querySelector(\".color-selector\");\r\n        colorSelector.classList.remove(\"hidden\");\r\n        if (!errorContainer.classList.contains(\"deleted\")) {\r\n          errorContainer.classList.add(\"deleted\");\r\n        }\r\n\r\n        codeGuess.addEventListener(\"mouseleave\", function (e) {\r\n          colorSelector.classList.add(\"hidden\");\r\n        });\r\n      });\r\n  });\r\n  containerColors.addEventListener(\"click\", function (e) {\r\n    if (e.target.closest(\".color\")) {\r\n      const guessPosition = e.target.parentElement.dataset.guessNum;\r\n      const color = e.target.dataset.color;\r\n      guess[guessPosition - 1] = color;\r\n      e.target.parentElement.parentElement.querySelector(\r\n        \".color-guess\"\r\n      ).style.backgroundColor = color;\r\n    }\r\n    //FIX AFTERWARDS TO ADD CLICK EVENT\r\n\r\n    //     if (e.target.closest('color-guess')) {\r\n    //        //CODE GOES HERE\r\n    //     }\r\n  });\r\n  pastGuessesContainer.addEventListener(\"click\", function (e) {\r\n    const clickTarget = e.target;\r\n    if (e.target.closest(\".past-guess\")) {\r\n      const id = clickTarget.dataset.id;\r\n      const container = Array.from(\r\n        document.querySelectorAll(\".past-guess\")\r\n      ).reduce(\r\n        (containerEl, curEl) => (curEl.dataset.id === id ? curEl : containerEl),\r\n        \"\"\r\n      );\r\n      const pastGuessedColors = container.querySelectorAll(\".past-guess-color\");\r\n      pastGuessedColors.forEach(function (passedGuessedColorEl, i) {\r\n        const color = passedGuessedColorEl.dataset.color;\r\n        guess[i] = color;\r\n        // pastGuesses[id - 1].guess[id - 1] = color;\r\n        document.querySelectorAll(\".color-guess\")[i].style.backgroundColor =\r\n          color;\r\n      });\r\n    }\r\n  });\r\n  toggleSidebarBtn.addEventListener(\"click\", function (e) {\r\n    e.preventDefault();\r\n    sidebarRules.classList.toggle(\"hidden-sidebar\");\r\n    const status = sidebarRules.classList.contains(\"hidden-sidebar\")\r\n      ? \"hidden\"\r\n      : \"showing\";\r\n    toggleSidebarBtn.textContent = `${\r\n      status === \"hidden\" ? \"Show\" : \"Hide\"\r\n    } Rules!`;\r\n  });\r\n\r\n  return guess;\r\n};\r\nconst guess = guessInit();\r\n\r\n//Function that will check the guess, some some actions but ultimately will will return true or false based on whether the user got the code right or not\r\nconst checkGuess = function (guess, code) {\r\n  let rightColorWrongSpot = 0;\r\n  let rightColorRightSpot = 0;\r\n  let wrongColor = 0;\r\n  try {\r\n    if (guessesLeft < 1)\r\n      throw new Error(\r\n        `Error: No guesses remaining. To start over, click the \"Start Over\" button`\r\n      );\r\n    if (playerWon)\r\n      throw new Error(\r\n        'You have already guessed the code! Please click the \"Start Over\" button to play again!'\r\n      );\r\n    if (guess.includes(\"_\"))\r\n      throw new Error(\"Error: Some guesses have not been assigned a color\");\r\n    if (\r\n      pastGuesses.some(\r\n        (pastGuess) => pastGuess.guess.join(\"\") === guess.join(\"\")\r\n      )\r\n    )\r\n      throw new Error(\"Error : Sequence has already been guessed\");\r\n    if (new Set(guess).size < 4)\r\n      throw new Error(\"Error: No duplicate colors allowed\");\r\n    guess.forEach(function (color, i) {\r\n      if (code.includes(color)) {\r\n        if (code[i] === color) {\r\n          rightColorRightSpot++;\r\n        } else {\r\n          rightColorWrongSpot++;\r\n        }\r\n      } else {\r\n        wrongColor++;\r\n      }\r\n    });\r\n    if (rightColorRightSpot < 4) {\r\n      pastGuesses.push(\r\n        new Guess(\r\n          [...guess],\r\n          rightColorRightSpot,\r\n          rightColorWrongSpot,\r\n          wrongColor\r\n        )\r\n      );\r\n      pastGuesses[pastGuesses.length - 1].renderGuess();\r\n      guessesLeft--; //MOVE TO DIFFERENT FUNCTION AFTERWARDS\r\n      if (guessesLeft < 1) {\r\n        throw new Error(\r\n          `Sorry, you have run out of guesses! The correct guess was:`\r\n        );\r\n      }\r\n      guess.fill(\"_\");\r\n      document\r\n        .querySelectorAll(\".color-guess\")\r\n        .forEach((el) => (el.style.backgroundColor = \"white\"));\r\n    } else {\r\n      //END GAME - PROMPT USER TO CLICK A NEW BUTTON TO START OVER\r\n      //   successContainer.classList?.remove(\"deleted\");\r\n      successContainer.classList.remove(\"deleted\");\r\n      successContainer.querySelector(\".message-text\").textContent =\r\n        'You guessed the code! Congratulations! If you want to play again, click the \"Start Over\" button!';\r\n      playerWon = true;\r\n      hintElementContainer.classList.add(\"deleted\");\r\n    }\r\n  } catch (err) {\r\n    successContainer.classList.add(\"deleted\");\r\n    // document.querySelector('.header-mastermind').style.marginBotton = '12.8rem'\r\n    errorContainer.classList.remove(\"deleted\");\r\n    hintElementContainer.classList.add(\"deleted\");\r\n    errorContainer.querySelector(\".message-text\").textContent = err.message;\r\n    if (\r\n      err.message.startsWith(\"Sorry,\") &&\r\n      !errorContainer.querySelector(\".error-black-box\")\r\n    ) {\r\n      document.querySelector(\".message-box\").insertAdjacentHTML(\r\n        \"beforeend\",\r\n        `<div class=\"black-box-code error-black-box\">\r\n      <div class=\"past-guess-colors\">\r\n          <div class=\"past-guess-color color-${code[0]}\" data-color=\"${code[0]}\" ></div>\r\n          <div class=\"past-guess-color color-${code[1]}\" data-color=\"${code[1]}\" ></div>\r\n          <div class=\"past-guess-color color-${code[2]}\" data-color=\"${code[2]}\" ></div>\r\n          <div class=\"past-guess-color color-${code[3]}\" data-color=\"${code[3]}\" ></div>\r\n      </div></div>`\r\n      );\r\n    } else {\r\n      document.querySelector(\".error-black-box\")?.remove();\r\n    }\r\n  }\r\n};\r\nconst resetPage = function () {\r\n  pastGuessesContainer.innerHTML = \"\";\r\n  pastGuesses = [];\r\n  guess.fill(\"_\");\r\n  document\r\n    .querySelectorAll(\".color-guess\")\r\n    .forEach((el) => (el.style.backgroundColor = \"white\"));\r\n  guessesLeft = 10;\r\n  errorContainer.classList.add(\"deleted\");\r\n  successContainer.classList.add(\"deleted\");\r\n  hintElementContainer.classList.add(\"deleted\");\r\n\r\n  playerWon = false;\r\n  const uniqueCode = new Set();\r\n  while (uniqueCode.size < 4) {\r\n    uniqueCode.add(colors[Math.floor(Math.random() * colors.length)]);\r\n  }\r\n  code.forEach((_, i) => (code[i] = [...uniqueCode][i]));\r\n};\r\nconst submitInit = function () {\r\n  submitBtn.addEventListener(\"click\", checkGuess.bind(null, guess, code)); //PUT INTO FUNCTION LATER\r\n};\r\nconst resetInit = function () {\r\n  resetBtn.addEventListener(\"click\", resetPage);\r\n};\r\nsubmitInit();\r\nresetInit();\r\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}